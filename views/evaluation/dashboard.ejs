<% layout("/layouts/boilerplate") %>
<% const maxScore = Math.max(...rubric.criteria.flatMap(c => c.performances.map(p => p.level))); %>

<div class="mt-3">
    <form method="get" action="/<%= course._id %>/<%=rubric._id%>/scores" class="m-0">
        <button class="btn btn-outline-dark">‚Üê Back to Course</button>
    </form>
    <br>
    <h3>Dashboard - <%= course.courseCode %> <%= course.description %></h3>
</div>

<div class="mb-5">
    <canvas id="teamPerformanceChart" style="max-height: 500px;"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const averageTeamScores = <%- JSON.stringify(averageTeamScores) %>;

    const criteriaLabels = Object.keys(averageTeamScores);
    const teamNamesSet = new Set();

    criteriaLabels.forEach(criteria => {
        Object.keys(averageTeamScores[criteria]).forEach(teamName => {
            teamNamesSet.add(teamName);
        });
    });

    const teamNames = Array.from(teamNamesSet);

    // const colorPalette = [
    //     'rgba(255, 99, 132, 0.7)',
    //     'rgba(54, 162, 235, 0.7)',
    //     'rgba(255, 206, 86, 0.7)',
    //     'rgba(75, 192, 192, 0.7)',
    //     'rgba(153, 102, 255, 0.7)',
    //     'rgba(255, 159, 64, 0.7)'
    // ];
    function generateColor(index, total) {
        const hue = (index * 360 / total) % 360;
        return `hsl(${hue}, 70%, 60%)`;
    }

    const datasets = teamNames.map((teamName, index) => {
        const data = criteriaLabels.map(criteria => {
            return averageTeamScores[criteria][teamName] || 0;
        });
        return {
            label: teamName,
            data: data,
            backgroundColor: generateColor(index, teamNames.length)
        };
    });

    const ctx = document.getElementById("teamPerformanceChart").getContext("2d");
    new Chart(ctx, {
        type: "bar",
        data: {
            labels: criteriaLabels,
            datasets: datasets
        },
        options: {
            responsive: true,
            plugins: {
                title: {
                    display: true,
                    text: "Average Team Scores by Rubric Criteria"
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    max: <%= maxScore %>,
                    title: {
                        display: true,
                        text: "Score"
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: "Criteria"
                    }
                }
            }
        }
    });
</script>
